
;; Function main (main, funcdef_no=0, decl_uid=2198, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r83,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 43(l0): point = 0
   Insn 42(l0): point = 2
   Insn 38(l0): point = 4
   Insn 35(l0): point = 6
   Insn 34(l0): point = 8
   Insn 33(l0): point = 10
   Insn 32(l0): point = 12
   Insn 31(l0): point = 14
   Insn 30(l0): point = 16
   Insn 29(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 15(l0): point = 46
   Insn 14(l0): point = 48
   Insn 13(l0): point = 50
   Insn 12(l0): point = 52
   Insn 11(l0): point = 54
   Insn 10(l0): point = 56
   Insn 9(l0): point = 58
   Insn 8(l0): point = 60
   Insn 7(l0): point = 62
   Insn 6(l0): point = 64
   Insn 5(l0): point = 66
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [15..20]
 a3(r86): [17..22]
 a4(r85): [19..24]
 a5(r84): [29..32]
 a6(r83): [31..34]
 a7(r91): [43..44]
 a8(r90): [59..60]
Compressing live ranges: from 69 to 12 - 17%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r86): [4..5]
 a4(r85): [4..5]
 a5(r84): [6..7]
 a6(r83): [6..7]
 a7(r91): [8..9]
 a8(r90): [10..11]
  regions=1, blocks=3, points=12
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    6:r83  l0     1    5:r84  l0     0    4:r85  l0     2    3:r86  l0     1
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    8:r90  l0     0
    7:r91  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={13d,8u} r1={8d,1u} r2={8d,1u} r4={11d,4u} r5={13d,6u} r6={1d,2u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,1u} r17={8d} r18={6d} r19={6d} r20={1d,8u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 504{456d,48u,0e} in 34{28 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89 90 91
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f6ad01a0850 *.LC0>)) Pro7.c:7 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:7 93 {*movqi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:7 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:8 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 90)) Pro7.c:8 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:8 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:8 93 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:8 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6ad01a0980 *.LC2>)) Pro7.c:10 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:10 93 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:10 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:11 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 91)) Pro7.c:11 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:11 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:11 93 {*movqi_internal}
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:11 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 21 20 22 2 (set (reg:SI 83 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 84 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 90 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 4 si)
        (reg:SI 83 [ D.2235 ])) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.2235 ])
        (nil)))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg:SI 84 [ D.2235 ])) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ D.2235 ])
        (nil)))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:13 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:SI 85 [ D.2235 ])
        (reg:SI 0 ax)) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (reg:SI 86 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 90 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 87 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 2 cx)
        (reg:SI 85 [ D.2235 ])) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ D.2235 ])
        (nil)))
(insn 30 29 31 2 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.2235 ])) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ D.2235 ])
        (nil)))
(insn 31 30 32 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.2235 ])) Pro7.c:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.2235 ])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6ad01a0a18 *.LC3>)) Pro7.c:13 89 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:13 93 {*movqi_internal}
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:13 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 35 34 38 2 (set (reg:SI 88 [ D.2235 ])
        (const_int 0 [0])) Pro7.c:15 90 {*movsi_internal}
     (nil))
(insn 38 35 42 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.2235 ])) Pro7.c:15 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.2235 ])
        (nil)))
(insn 42 38 43 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Pro7.c:16 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 43 42 0 2 (use (reg/i:SI 0 ax)) Pro7.c:16 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function power (power, funcdef_no=1, decl_uid=2202, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 50.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:42 SSE_REGS:42 ALL_SSE_REGS:42 MMX_REGS:47 FP_TOP_SSE_REGS:724 FP_SECOND_SSE_REGS:724 FLOAT_SSE_REGS:724 FLOAT_INT_REGS:724 INT_SSE_REGS:43 FLOAT_INT_SSE_REGS:724 ALL_REGS:724 MEM:12
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a3(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a5(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a8(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a10(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a11(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a12(r98,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:30 SSE_REGS:30 ALL_SSE_REGS:30 MMX_REGS:40 FP_TOP_SSE_REGS:522 FP_SECOND_SSE_REGS:522 FLOAT_SSE_REGS:522 FLOAT_INT_REGS:522 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:522 ALL_REGS:522 MEM:12
  a13(r99,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:23 SSE_REGS:23 ALL_SSE_REGS:23 MMX_REGS:28 FP_TOP_SSE_REGS:418 FP_SECOND_SSE_REGS:418 FLOAT_SSE_REGS:418 FLOAT_INT_REGS:418 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:418 ALL_REGS:418 MEM:8
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a15(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a18(r93,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:30 SSE_REGS:30 ALL_SSE_REGS:30 MMX_REGS:40 FP_TOP_SSE_REGS:522 FP_SECOND_SSE_REGS:522 FLOAT_SSE_REGS:522 FLOAT_INT_REGS:522 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:522 ALL_REGS:522 MEM:12
  a19(r94,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:23 SSE_REGS:23 ALL_SSE_REGS:23 MMX_REGS:28 FP_TOP_SSE_REGS:418 FP_SECOND_SSE_REGS:418 FLOAT_SSE_REGS:418 FLOAT_INT_REGS:418 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:418 ALL_REGS:418 MEM:8
  a20(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a21(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 60(l0): point = 0
   Insn 59(l0): point = 2
   Insn 55(l0): point = 4
   Insn 52(l0): point = 7
   Insn 51(l0): point = 9
   Insn 50(l0): point = 11
   Insn 49(l0): point = 13
   Insn 48(l0): point = 15
   Insn 47(l0): point = 17
   Insn 46(l0): point = 19
   Insn 45(l0): point = 21
   Insn 64(l0): point = 24
   Insn 40(l0): point = 26
   Insn 39(l0): point = 28
   Insn 38(l0): point = 30
   Insn 37(l0): point = 32
   Insn 36(l0): point = 34
   Insn 35(l0): point = 36
   Insn 34(l0): point = 38
   Insn 33(l0): point = 40
   Insn 32(l0): point = 42
   Insn 31(l0): point = 44
   Insn 30(l0): point = 46
   Insn 29(l0): point = 48
   Insn 28(l0): point = 50
   Insn 27(l0): point = 52
   Insn 26(l0): point = 54
   Insn 25(l0): point = 56
   Insn 24(l0): point = 58
   Insn 23(l0): point = 60
   Insn 22(l0): point = 62
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 18(l0): point = 69
   Insn 17(l0): point = 71
   Insn 16(l0): point = 73
   Insn 15(l0): point = 75
   Insn 62(l0): point = 78
   Insn 10(l0): point = 80
   Insn 8(l0): point = 83
   Insn 7(l0): point = 85
   Insn 3(l0): point = 87
   Insn 2(l0): point = 89
 a0(r92): [3..4]
 a1(r83): [78..80] [24..26] [5..7]
 a2(r91): [8..9]
 a3(r104): [14..17]
 a4(r90): [16..19]
 a5(r103): [20..21]
 a6(r89): [27..28]
 a7(r87): [27..48]
 a8(r102): [33..36]
 a9(r88): [35..38]
 a10(r101): [39..40]
 a11(r100): [41..42]
 a12(r98): [43..46]
 a13(r99): [43..44]
 a14(r97): [53..56]
 a15(r86): [55..58]
 a16(r96): [59..60]
 a17(r95): [61..62]
 a18(r93): [63..66]
 a19(r94): [63..64]
 a20(r85): [72..73]
 a21(r84): [74..75]
Compressing live ranges: from 92 to 36 - 39%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r83): [34..35] [10..11] [2..3]
 a2(r91): [4..5]
 a3(r104): [6..7]
 a4(r90): [6..7]
 a5(r103): [8..9]
 a6(r89): [12..13]
 a7(r87): [12..21]
 a8(r102): [14..15]
 a9(r88): [14..15]
 a10(r101): [16..17]
 a11(r100): [18..19]
 a12(r98): [20..21]
 a13(r99): [20..21]
 a14(r97): [22..23]
 a15(r86): [22..23]
 a16(r96): [24..25]
 a17(r95): [26..27]
 a18(r93): [28..29]
 a19(r94): [28..29]
 a20(r85): [30..31]
 a21(r84): [32..33]
  regions=1, blocks=8, points=36
    allocnos=22 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
    1:r83  l0     0   21:r84  l0     0   20:r85  l0     0   15:r86  l0     1
    7:r87  l0     3    9:r88  l0     1    6:r89  l0     0    4:r90  l0     1
    2:r91  l0     0    0:r92  l0     0   18:r93  l0     0   19:r94  l0     1
   17:r95  l0     0   16:r96  l0     0   14:r97  l0     0   12:r98  l0     0
   13:r99  l0     1   11:r100 l0     0   10:r101 l0     0    8:r102 l0     0
    5:r103 l0     0    3:r104 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


power

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,5u} r1={4d} r2={4d} r4={7d,4u} r5={7d,4u} r6={1d,7u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,6u} r17={15d,2u} r18={3d} r19={3d} r20={1d,18u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r83={3d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 347{266d,80u,1e} in 43{40 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (reg:SI 5 di [ x ])) Pro7.c:19 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
        (reg:SI 4 si [ n ])) Pro7.c:19 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
            (const_int 0 [0]))) Pro7.c:20 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) Pro7.c:20 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 62 3 (set (reg:SI 83 [ D.2240 ])
        (const_int 1 [0x1])) Pro7.c:21 90 {*movsi_internal}
     (nil))
(jump_insn 62 10 63 3 (set (pc)
        (label_ref 53)) Pro7.c:21 636 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 63 62 13)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 84 85
(code_label 13 63 14 4 4 "" [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 84 [ D.2241 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:23 90 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:SI 85 [ D.2241 ])
                (and:SI (reg:SI 84 [ D.2241 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:23 370 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.2241 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.2241 ])
            (const_int 0 [0]))) Pro7.c:23 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ D.2241 ])
        (nil)))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) Pro7.c:23 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87 88 89 93 94 95 96 97 98 99 100 101 102
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 90 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 93)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg:SI 93)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 23 22 24 5 (parallel [
            (set (reg:SI 96)
                (ashiftrt:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 5 (set (reg:SI 86 [ D.2240 ])
        (reg:SI 96)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 25 24 26 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 90 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 4 si)
        (reg:SI 86 [ D.2240 ])) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ D.2240 ])
        (nil)))
(insn 27 26 28 5 (set (reg:SI 5 di)
        (reg:SI 97)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(call_insn 28 27 29 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 5 (set (reg:SI 87 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 30 29 31 5 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 90 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:SI 99)
                (lshiftrt:SI (reg:SI 98)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg:SI 99)
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_DEAD (reg:SI 98)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 33 32 34 5 (parallel [
            (set (reg:SI 101)
                (ashiftrt:SI (reg:SI 100)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 5 (set (reg:SI 88 [ D.2240 ])
        (reg:SI 101)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 35 34 36 5 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 90 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:SI 4 si)
        (reg:SI 88 [ D.2240 ])) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.2240 ])
        (nil)))
(insn 37 36 38 5 (set (reg:SI 5 di)
        (reg:SI 102)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 39 38 40 5 (set (reg:SI 89 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 40 39 64 5 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 87 [ D.2240 ])
                    (reg:SI 89 [ D.2240 ])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.2240 ])
        (expr_list:REG_DEAD (reg:SI 87 [ D.2240 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 64 40 65 5 (set (pc)
        (label_ref 53)) Pro7.c:24 636 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 65 64 43)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 90 91 103 104
(code_label 43 65 44 6 6 "" [1 uses])
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:26 90 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 90 [ D.2240 ])
                (plus:SI (reg:SI 103)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 47 46 48 6 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:26 90 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:SI 4 si)
        (reg:SI 90 [ D.2240 ])) Pro7.c:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.2240 ])
        (nil)))
(insn 49 48 50 6 (set (reg:SI 5 di)
        (reg:SI 104)) Pro7.c:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(call_insn 50 49 51 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:26 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 51 50 52 6 (set (reg:SI 91 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 52 51 53 6 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 91 [ D.2240 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.2240 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 92
(code_label 53 52 54 7 5 "" [2 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 7 (set (reg:SI 92 [ <retval> ])
        (reg:SI 83 [ D.2240 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.2240 ])
        (nil)))
(insn 59 55 60 7 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Pro7.c:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 60 59 0 7 (use (reg/i:SI 0 ax)) Pro7.c:27 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


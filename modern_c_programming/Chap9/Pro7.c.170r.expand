
;; Function main (main, funcdef_no=0, decl_uid=2198, symbol_order=0)

main ()
{
  int n;
  int x;
  int D.2216;
  int x.3;
  int n.2;
  int D.2213;
  int x.1;
  int n.0;
  int n.0_1;
  int x.1_2;
  int _3;
  int n.2_4;
  int x.3_5;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  printf ("Enter number: ");
  scanf ("%d", &x);
  printf ("Enter power: ");
  scanf ("%d", &n);
  n.0_1 = n;
  x.1_2 = x;
  _3 = power (x.1_2, n.0_1);
  n.2_4 = n;
  x.3_5 = x;
  printf ("%d to the power %d is %d", x.3_5, n.2_4, _3);
  _6 = 0;
  x ={v} {CLOBBER};
  n ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _6;
;;    succ:       EXIT

}



Partition map 

Partition 1 (n.0_1 - 1 )
Partition 2 (x.1_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (n.2_4 - 4 )
Partition 5 (x.3_5 - 5 )
Partition 6 (_6 - 6 )

After Coalescing:

Partition map 

Partition 0 (n.0_1 - 1 )
Partition 1 (x.1_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (n.2_4 - 4 )
Partition 4 (x.3_5 - 5 )
Partition 5 (_6 - 6 )

main ()
{
  int n;
  int x;
  int D.2216;
  int x.3;
  int n.2;
  int D.2213;
  int x.1;
  int n.0;
  int n.0_1;
  int x.1_2;
  int _3;
  int n.2_4;
  int x.3_5;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  printf ("Enter number: ");
  scanf ("%d", &x);
  printf ("Enter power: ");
  scanf ("%d", &n);
  n.0_1 = n;
  x.1_2 = x;
  _3 = power (x.1_2, n.0_1);
  n.2_4 = n;
  x.3_5 = x;
  printf ("%d to the power %d is %d", x.3_5, n.2_4, _3);
  _6 = 0;
  x ={v} {CLOBBER};
  n ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1>:
  return _6;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; printf ("Enter number: ");

(insn 5 4 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f6ad01a0850 *.LC0>)) Pro7.c:7 -1
     (nil))

(insn 6 5 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:7 -1
     (nil))

(call_insn 7 6 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:7 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; scanf ("%d", &x);

(insn 8 7 9 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:8 -1
     (nil))

(insn 9 8 10 (set (reg:DI 4 si)
        (reg:DI 90)) Pro7.c:8 -1
     (nil))

(insn 10 9 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:8 -1
     (nil))

(insn 11 10 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:8 -1
     (nil))

(call_insn 12 11 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:8 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; printf ("Enter power: ");

(insn 13 12 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6ad01a0980 *.LC2>)) Pro7.c:10 -1
     (nil))

(insn 14 13 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:10 -1
     (nil))

(call_insn 15 14 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:10 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; scanf ("%d", &n);

(insn 16 15 17 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:11 -1
     (nil))

(insn 17 16 18 (set (reg:DI 4 si)
        (reg:DI 91)) Pro7.c:11 -1
     (nil))

(insn 18 17 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:11 -1
     (nil))

(insn 19 18 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:11 -1
     (nil))

(call_insn 20 19 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:11 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; _1 = n;

(insn 21 20 0 (set (reg:SI 83 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 -1
     (nil))

;; _2 = x;

(insn 22 21 0 (set (reg:SI 84 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 -1
     (nil))

;; _3 = power (_2, _1);

(insn 23 22 24 (set (reg:SI 4 si)
        (reg:SI 83 [ D.2235 ])) Pro7.c:13 -1
     (nil))

(insn 24 23 25 (set (reg:SI 5 di)
        (reg:SI 84 [ D.2235 ])) Pro7.c:13 -1
     (nil))

(call_insn 25 24 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:13 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 26 25 0 (set (reg:SI 85 [ D.2235 ])
        (reg:SI 0 ax)) Pro7.c:13 -1
     (nil))

;; _4 = n;

(insn 27 26 0 (set (reg:SI 86 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 -1
     (nil))

;; _5 = x;

(insn 28 27 0 (set (reg:SI 87 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 -1
     (nil))

;; printf ("%d to the power %d is %d", _5, _4, _3);

(insn 29 28 30 (set (reg:SI 2 cx)
        (reg:SI 85 [ D.2235 ])) Pro7.c:13 -1
     (nil))

(insn 30 29 31 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.2235 ])) Pro7.c:13 -1
     (nil))

(insn 31 30 32 (set (reg:SI 4 si)
        (reg:SI 87 [ D.2235 ])) Pro7.c:13 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6ad01a0a18 *.LC3>)) Pro7.c:13 -1
     (nil))

(insn 33 32 34 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:13 -1
     (nil))

(call_insn 34 33 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

;; _6 = 0;

(insn 35 34 0 (set (reg:SI 88 [ D.2235 ])
        (const_int 0 [0])) Pro7.c:15 -1
     (nil))

;; x ={v} {CLOBBER};

(nil)

;; n ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L1>:

(code_label 36 35 37 2 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; return _6;

(insn 38 37 39 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.2235 ])) Pro7.c:15 -1
     (nil))

(jump_insn 39 38 40 (set (pc)
        (label_ref 0)) Pro7.c:15 -1
     (nil))

(barrier 40 39 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 39.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f6ad01a0850 *.LC0>)) Pro7.c:7 -1
     (nil))
(insn 6 5 7 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:7 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:7 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:8 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 90)) Pro7.c:8 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:8 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:8 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:8 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6ad01a0980 *.LC2>)) Pro7.c:10 -1
     (nil))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:10 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:10 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:11 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 91)) Pro7.c:11 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f6ad01a08e8 *.LC1>)) Pro7.c:11 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:11 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f6ad0089d00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) Pro7.c:11 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 21 20 22 2 (set (reg:SI 83 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 84 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 4 si)
        (reg:SI 83 [ D.2235 ])) Pro7.c:13 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (reg:SI 84 [ D.2235 ])) Pro7.c:13 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:13 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:SI 85 [ D.2235 ])
        (reg:SI 0 ax)) Pro7.c:13 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 86 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A64])) Pro7.c:13 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 87 [ D.2235 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:13 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 2 cx)
        (reg:SI 85 [ D.2235 ])) Pro7.c:13 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 1 dx)
        (reg:SI 86 [ D.2235 ])) Pro7.c:13 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 4 si)
        (reg:SI 87 [ D.2235 ])) Pro7.c:13 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6ad01a0a18 *.LC3>)) Pro7.c:13 -1
     (nil))
(insn 33 32 34 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) Pro7.c:13 -1
     (nil))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f6ad0089100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) Pro7.c:13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 35 34 38 2 (set (reg:SI 88 [ D.2235 ])
        (const_int 0 [0])) Pro7.c:15 -1
     (nil))
(insn 38 35 42 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.2235 ])) Pro7.c:15 -1
     (nil))
(insn 42 38 43 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) Pro7.c:16 -1
     (nil))
(insn 43 42 0 2 (use (reg/i:SI 0 ax)) Pro7.c:16 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function power (power, funcdef_no=1, decl_uid=2202, symbol_order=1)

power (int x, int n)
{
  int D.2231;
  int D.2230;
  int D.2229;
  int D.2228;
  int D.2227;
  int D.2226;
  unsigned int D.2223;
  unsigned int x.4;
  int D.2221;
  int _1;
  int _3;
  unsigned int x.4_5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (n_2(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _3 = 1;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  x.4_5 = (unsigned int) x_4(D);
  _6 = x.4_5 & 1;
  if (_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _7 = n_2(D) / 2;
  _8 = power (x_4(D), _7);
  _9 = n_2(D) / 2;
  _10 = power (x_4(D), _9);
  _11 = _8 * _10;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _12 = n_2(D) + -1;
  _13 = power (x_4(D), _12);
  _14 = _13 * x_4(D);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_3(3), _11(5), _14(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (n_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (x_4(D) - 4 )
Partition 5 (x.4_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (n_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (x_4(D) - 4 )
Partition 4 (_11 - 11 )
Partition 5 (_14 - 14 )


Live on entry to BB2 : n_2(D)  x_4(D)  

Live on entry to BB3 : 

Live on entry to BB4 : n_2(D)  x_4(D)  

Live on entry to BB5 : n_2(D)  x_4(D)  

Live on entry to BB6 : n_2(D)  x_4(D)  

Live on entry to BB7 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (n_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (x_4(D) - 4 )
Partition 4 (_11 - 11 )
Partition 5 (_14 - 14 )

Coalesce list: (1)_1 & (14)_14 [map: 0, 5] : Success -> 0
Coalesce list: (1)_1 & (11)_11 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (3)_3 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 3 11 14 )
Partition 1 (n_2(D) - 2 )
Partition 2 (x_4(D) - 4 )
Partition 3 (x.4_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )

power (int x, int n)
{
  int D.2231;
  int D.2230;
  int D.2229;
  int D.2228;
  int D.2227;
  int D.2226;
  unsigned int D.2223;
  unsigned int x.4;
  int D.2221;
  int _1;
  int _3;
  unsigned int x.4_5;
  unsigned int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (n_2(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _3 = 1;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  x.4_5 = (unsigned int) x_4(D);
  _6 = x.4_5 & 1;
  if (_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _7 = n_2(D) / 2;
  _8 = power (x_4(D), _7);
  _9 = n_2(D) / 2;
  _10 = power (x_4(D), _9);
  _11 = _8 * _10;
  goto <bb 7> (<L4>);
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _12 = n_2(D) + -1;
  _13 = power (x_4(D), _12);
  _14 = _13 * x_4(D);
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_3(3), _11(5), _14(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (n_2(D) == 0)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
            (const_int 0 [0]))) Pro7.c:20 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Pro7.c:20 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _3 = 1;

(insn 10 9 0 (set (reg:SI 83 [ D.2240 ])
        (const_int 1 [0x1])) Pro7.c:21 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 13 12 14 4 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = (unsigned int) x_4(D);

(insn 15 14 0 (set (reg:SI 84 [ D.2241 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:23 -1
     (nil))

;; _6 = _5 & 1;

(insn 16 15 0 (parallel [
            (set (reg:SI 85 [ D.2241 ])
                (and:SI (reg:SI 84 [ D.2241 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:23 -1
     (nil))

;; if (_6 == 0)

(insn 17 16 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.2241 ])
            (const_int 0 [0]))) Pro7.c:23 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) Pro7.c:23 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _7 = n_2(D) / 2;

(insn 20 19 21 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 -1
     (nil))

(insn 21 20 22 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 93)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))

(insn 22 21 23 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:SI 96)
                (ashiftrt:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 93)
            (const_int 2 [0x2]))
        (nil)))

(insn 24 23 0 (set (reg:SI 86 [ D.2240 ])
        (reg:SI 96)) Pro7.c:24 -1
     (nil))

;; _8 = power (x_4(D), _7);

(insn 25 24 26 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 -1
     (nil))

(insn 26 25 27 (set (reg:SI 4 si)
        (reg:SI 86 [ D.2240 ])) Pro7.c:24 -1
     (nil))

(insn 27 26 28 (set (reg:SI 5 di)
        (reg:SI 97)) Pro7.c:24 -1
     (nil))

(call_insn 28 27 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 29 28 0 (set (reg:SI 87 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 -1
     (nil))

;; _9 = n_2(D) / 2;

(insn 30 29 31 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:SI 99)
                (lshiftrt:SI (reg:SI 98)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))

(insn 32 31 33 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg:SI 99)
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))

(insn 33 32 34 (parallel [
            (set (reg:SI 101)
                (ashiftrt:SI (reg:SI 100)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 98)
            (const_int 2 [0x2]))
        (nil)))

(insn 34 33 0 (set (reg:SI 88 [ D.2240 ])
        (reg:SI 101)) Pro7.c:24 -1
     (nil))

;; _10 = power (x_4(D), _9);

(insn 35 34 36 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 -1
     (nil))

(insn 36 35 37 (set (reg:SI 4 si)
        (reg:SI 88 [ D.2240 ])) Pro7.c:24 -1
     (nil))

(insn 37 36 38 (set (reg:SI 5 di)
        (reg:SI 102)) Pro7.c:24 -1
     (nil))

(call_insn 38 37 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 39 38 0 (set (reg:SI 89 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 -1
     (nil))

;; _11 = _8 * _10;

(insn 40 39 0 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 87 [ D.2240 ])
                    (reg:SI 89 [ D.2240 ])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 43 42 44 6 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = n_2(D) + -1;

(insn 45 44 46 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:26 -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg:SI 90 [ D.2240 ])
                (plus:SI (reg:SI 103)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; _13 = power (x_4(D), _12);

(insn 47 46 48 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:26 -1
     (nil))

(insn 48 47 49 (set (reg:SI 4 si)
        (reg:SI 90 [ D.2240 ])) Pro7.c:26 -1
     (nil))

(insn 49 48 50 (set (reg:SI 5 di)
        (reg:SI 104)) Pro7.c:26 -1
     (nil))

(call_insn 50 49 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:26 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 51 50 0 (set (reg:SI 91 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:26 -1
     (nil))

;; _14 = _13 * x_4(D);

(insn 52 51 0 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 91 [ D.2240 ])
                    (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 53 52 54 5 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 55 54 56 (set (reg:SI 92 [ <retval> ])
        (reg:SI 83 [ D.2240 ])) -1
     (nil))

(jump_insn 56 55 57 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 57 56 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 56.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (reg:SI 5 di [ x ])) Pro7.c:19 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
        (reg:SI 4 si [ n ])) Pro7.c:19 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
            (const_int 0 [0]))) Pro7.c:20 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) Pro7.c:20 -1
     (nil)
 -> 13)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:SI 83 [ D.2240 ])
        (const_int 1 [0x1])) Pro7.c:21 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (label_ref 53)) Pro7.c:21 -1
     (nil)
 -> 53)
;;  succ:       8

(barrier 12 11 13)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 13 12 14 5 4 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:SI 84 [ D.2241 ])
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:23 -1
     (nil))
(insn 16 15 17 5 (parallel [
            (set (reg:SI 85 [ D.2241 ])
                (and:SI (reg:SI 84 [ D.2241 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:23 -1
     (nil))
(insn 17 16 18 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.2241 ])
            (const_int 0 [0]))) Pro7.c:23 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) Pro7.c:23 -1
     (nil)
 -> 43)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 -1
     (nil))
(insn 21 20 22 6 (parallel [
            (set (reg:SI 94)
                (lshiftrt:SI (reg:SI 93)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))
(insn 22 21 23 6 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 94)
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg:SI 96)
                (ashiftrt:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 93)
            (const_int 2 [0x2]))
        (nil)))
(insn 24 23 25 6 (set (reg:SI 86 [ D.2240 ])
        (reg:SI 96)) Pro7.c:24 -1
     (nil))
(insn 25 24 26 6 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 -1
     (nil))
(insn 26 25 27 6 (set (reg:SI 4 si)
        (reg:SI 86 [ D.2240 ])) Pro7.c:24 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 5 di)
        (reg:SI 97)) Pro7.c:24 -1
     (nil))
(call_insn 28 27 29 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 6 (set (reg:SI 87 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 -1
     (nil))
(insn 30 29 31 6 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:24 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:SI 99)
                (lshiftrt:SI (reg:SI 98)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg:SI 99)
                    (reg:SI 98)))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:SI 101)
                (ashiftrt:SI (reg:SI 100)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 98)
            (const_int 2 [0x2]))
        (nil)))
(insn 34 33 35 6 (set (reg:SI 88 [ D.2240 ])
        (reg:SI 101)) Pro7.c:24 -1
     (nil))
(insn 35 34 36 6 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:24 -1
     (nil))
(insn 36 35 37 6 (set (reg:SI 4 si)
        (reg:SI 88 [ D.2240 ])) Pro7.c:24 -1
     (nil))
(insn 37 36 38 6 (set (reg:SI 5 di)
        (reg:SI 102)) Pro7.c:24 -1
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:24 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 39 38 40 6 (set (reg:SI 89 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:24 -1
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 87 [ D.2240 ])
                    (reg:SI 89 [ D.2240 ])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:24 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (label_ref 53)) Pro7.c:24 -1
     (nil)
 -> 53)
;;  succ:       8

(barrier 42 41 43)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 43 42 44 7 6 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])) Pro7.c:26 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 90 [ D.2240 ])
                (plus:SI (reg:SI 103)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 47 46 48 7 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) Pro7.c:26 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 4 si)
        (reg:SI 90 [ D.2240 ])) Pro7.c:26 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 5 di)
        (reg:SI 104)) Pro7.c:26 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("power") [flags 0x3]  <function_decl 0x7f6ad0199000 power>) [0 power S1 A8])
            (const_int 0 [0]))) Pro7.c:26 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 51 50 52 7 (set (reg:SI 91 [ D.2240 ])
        (reg:SI 0 ax)) Pro7.c:26 -1
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:SI 83 [ D.2240 ])
                (mult:SI (reg:SI 91 [ D.2240 ])
                    (mem/c:SI (plus:DI (reg/f:DI 78 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) Pro7.c:26 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              6
;;              7 (FALLTHRU)
(code_label 53 52 54 8 5 "" [2 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 8 (set (reg:SI 92 [ <retval> ])
        (reg:SI 83 [ D.2240 ])) -1
     (nil))
(insn 59 55 60 8 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) Pro7.c:27 -1
     (nil))
(insn 60 59 0 8 (use (reg/i:SI 0 ax)) Pro7.c:27 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

